/* tslint:disable */
/* eslint-disable */
/**
 * Dehydrated API
 * Authentication is optional and depends on server configuration. When enabled, all API endpoints require a valid JWT token in the Authorization header. When disabled, no authentication is required.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DehydratedConfig
 */
export interface DehydratedConfig {
    /**
     * Whether to accept Let's Encrypt terms of service.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    acceptTerms?: boolean;
    /**
     * Directory for ACME account data.
     * @type {string}
     * @memberof DehydratedConfig
     */
    accountsDir?: string;
    /**
     * Directory for TLS-ALPN-01 challenges.
     * @type {string}
     * @memberof DehydratedConfig
     */
    alpnDir?: string;
    /**
     * API version to use (e.g., "v2").
     * @type {string}
     * @memberof DehydratedConfig
     */
    api?: string;
    /**
     * Whether to automatically clean up old files.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    autoCleanup?: boolean;
    /**
     * Base directories for dehydrated operation.
     * @type {string}
     * @memberof DehydratedConfig
     */
    baseDir?: string;
    /**
     * ACME settings for Let's Encrypt integration.
     * @type {string}
     * @memberof DehydratedConfig
     */
    ca?: string;
    /**
     * Directory for certificates.
     * @type {string}
     * @memberof DehydratedConfig
     */
    certDir?: string;
    /**
     * Directory for certificate chain cache.
     * @type {string}
     * @memberof DehydratedConfig
     */
    chainCache?: string;
    /**
     * Challenge settings for domain validation.
     * @type {string}
     * @memberof DehydratedConfig
     */
    challengeType?: string;
    /**
     * Directory for ACME challenges.
     * @type {string}
     * @memberof DehydratedConfig
     */
    challengesDir?: string;
    /**
     * Additional config directory for extensions.
     * @type {string}
     * @memberof DehydratedConfig
     */
    configD?: string;
    /**
     * Path to the dehydrated config file.
     * @type {string}
     * @memberof DehydratedConfig
     */
    configFile?: string;
    /**
     * Contact email for Let's Encrypt notifications.
     * @type {string}
     * @memberof DehydratedConfig
     */
    contactEmail?: string;
    /**
     * Additional curl options for HTTP requests.
     * @type {string}
     * @memberof DehydratedConfig
     */
    curlOpts?: string;
    /**
     * Directory for domain configurations.
     * @type {string}
     * @memberof DehydratedConfig
     */
    domainsDir?: string;
    /**
     * File paths for dehydrated operation.
     * @type {string}
     * @memberof DehydratedConfig
     */
    domainsFile?: string;
    /**
     * Whether to force renewal regardless of expiration.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    forceRenew?: boolean;
    /**
     * Whether to force domain validation.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    forceValidation?: boolean;
    /**
     * Whether to include full certificate chain.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    fullChain?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DehydratedConfig
     */
    group?: string;
    /**
     * Whether to chain hook calls for efficiency.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    hookChain?: boolean;
    /**
     * Path to the hook script.
     * @type {string}
     * @memberof DehydratedConfig
     */
    hookScript?: string;
    /**
     * Whether to use IPv4 for challenges.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    ipv4?: boolean;
    /**
     * Whether to use IPv6 for challenges.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    ipv6?: boolean;
    /**
     * Whether to continue processing on errors.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    keepGoing?: boolean;
    /**
     * Certificate settings for generation and renewal.
     * @type {string}
     * @memberof DehydratedConfig
     */
    keyAlgo?: string;
    /**
     * RSA key size in bits (e.g., 2048, 4096).
     * @type {number}
     * @memberof DehydratedConfig
     */
    keySize?: number;
    /**
     * Path to the lock file.
     * @type {string}
     * @memberof DehydratedConfig
     */
    lockFile?: string;
    /**
     * Other settings.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    noLock?: boolean;
    /**
     * Whether to enable OCSP stapling.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    ocsp?: boolean;
    /**
     * Days to keep OCSP responses (e.g., 7).
     * @type {number}
     * @memberof DehydratedConfig
     */
    ocspDays?: number;
    /**
     * Whether to fetch OCSP responses.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    ocspFetch?: boolean;
    /**
     * OCSP settings for certificate status.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    ocspMustStaple?: boolean;
    /**
     * Old Certificate Authority URL for migration.
     * @type {string}
     * @memberof DehydratedConfig
     */
    oldCa?: string;
    /**
     * Path to OpenSSL binary.
     * @type {string}
     * @memberof DehydratedConfig
     */
    openssl?: string;
    /**
     * OpenSSL settings for certificate generation.
     * @type {string}
     * @memberof DehydratedConfig
     */
    opensslConfig?: string;
    /**
     * Preferred certificate chain (e.g., "ISRG Root X1").
     * @type {string}
     * @memberof DehydratedConfig
     */
    preferredChain?: string;
    /**
     * Whether to renew private keys with certificates.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    privateKeyRenew?: boolean;
    /**
     * Whether to use key rollover for smoother transitions.
     * @type {boolean}
     * @memberof DehydratedConfig
     */
    privateKeyRollover?: boolean;
    /**
     * Days before renewal (e.g., 30).
     * @type {number}
     * @memberof DehydratedConfig
     */
    renewDays?: number;
    /**
     * User and group settings for file permissions.
     * @type {string}
     * @memberof DehydratedConfig
     */
    user?: string;
    /**
     * Directory for HTTP-01 challenges.
     * @type {string}
     * @memberof DehydratedConfig
     */
    wellKnownDir?: string;
}

/**
 * Check if a given object implements the DehydratedConfig interface.
 */
export function instanceOfDehydratedConfig(value: object): value is DehydratedConfig {
    return true;
}

export function DehydratedConfigFromJSON(json: any): DehydratedConfig {
    return DehydratedConfigFromJSONTyped(json, false);
}

export function DehydratedConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): DehydratedConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'acceptTerms': json['accept_terms'] == null ? undefined : json['accept_terms'],
        'accountsDir': json['accounts_dir'] == null ? undefined : json['accounts_dir'],
        'alpnDir': json['alpn_dir'] == null ? undefined : json['alpn_dir'],
        'api': json['api'] == null ? undefined : json['api'],
        'autoCleanup': json['auto_cleanup'] == null ? undefined : json['auto_cleanup'],
        'baseDir': json['base_dir'] == null ? undefined : json['base_dir'],
        'ca': json['ca'] == null ? undefined : json['ca'],
        'certDir': json['cert_dir'] == null ? undefined : json['cert_dir'],
        'chainCache': json['chain_cache'] == null ? undefined : json['chain_cache'],
        'challengeType': json['challenge_type'] == null ? undefined : json['challenge_type'],
        'challengesDir': json['challenges_dir'] == null ? undefined : json['challenges_dir'],
        'configD': json['config_d'] == null ? undefined : json['config_d'],
        'configFile': json['config_file'] == null ? undefined : json['config_file'],
        'contactEmail': json['contact_email'] == null ? undefined : json['contact_email'],
        'curlOpts': json['curl_opts'] == null ? undefined : json['curl_opts'],
        'domainsDir': json['domains_dir'] == null ? undefined : json['domains_dir'],
        'domainsFile': json['domains_file'] == null ? undefined : json['domains_file'],
        'forceRenew': json['force_renew'] == null ? undefined : json['force_renew'],
        'forceValidation': json['force_validation'] == null ? undefined : json['force_validation'],
        'fullChain': json['full_chain'] == null ? undefined : json['full_chain'],
        'group': json['group'] == null ? undefined : json['group'],
        'hookChain': json['hook_chain'] == null ? undefined : json['hook_chain'],
        'hookScript': json['hook_script'] == null ? undefined : json['hook_script'],
        'ipv4': json['ipv4'] == null ? undefined : json['ipv4'],
        'ipv6': json['ipv6'] == null ? undefined : json['ipv6'],
        'keepGoing': json['keep_going'] == null ? undefined : json['keep_going'],
        'keyAlgo': json['key_algo'] == null ? undefined : json['key_algo'],
        'keySize': json['key_size'] == null ? undefined : json['key_size'],
        'lockFile': json['lock_file'] == null ? undefined : json['lock_file'],
        'noLock': json['no_lock'] == null ? undefined : json['no_lock'],
        'ocsp': json['ocsp'] == null ? undefined : json['ocsp'],
        'ocspDays': json['ocsp_days'] == null ? undefined : json['ocsp_days'],
        'ocspFetch': json['ocsp_fetch'] == null ? undefined : json['ocsp_fetch'],
        'ocspMustStaple': json['ocsp_must_staple'] == null ? undefined : json['ocsp_must_staple'],
        'oldCa': json['old_ca'] == null ? undefined : json['old_ca'],
        'openssl': json['openssl'] == null ? undefined : json['openssl'],
        'opensslConfig': json['openssl_config'] == null ? undefined : json['openssl_config'],
        'preferredChain': json['preferred_chain'] == null ? undefined : json['preferred_chain'],
        'privateKeyRenew': json['private_key_renew'] == null ? undefined : json['private_key_renew'],
        'privateKeyRollover': json['private_key_rollover'] == null ? undefined : json['private_key_rollover'],
        'renewDays': json['renew_days'] == null ? undefined : json['renew_days'],
        'user': json['user'] == null ? undefined : json['user'],
        'wellKnownDir': json['well_known_dir'] == null ? undefined : json['well_known_dir'],
    };
}

export function DehydratedConfigToJSON(json: any): DehydratedConfig {
    return DehydratedConfigToJSONTyped(json, false);
}

export function DehydratedConfigToJSONTyped(value?: DehydratedConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accept_terms': value['acceptTerms'],
        'accounts_dir': value['accountsDir'],
        'alpn_dir': value['alpnDir'],
        'api': value['api'],
        'auto_cleanup': value['autoCleanup'],
        'base_dir': value['baseDir'],
        'ca': value['ca'],
        'cert_dir': value['certDir'],
        'chain_cache': value['chainCache'],
        'challenge_type': value['challengeType'],
        'challenges_dir': value['challengesDir'],
        'config_d': value['configD'],
        'config_file': value['configFile'],
        'contact_email': value['contactEmail'],
        'curl_opts': value['curlOpts'],
        'domains_dir': value['domainsDir'],
        'domains_file': value['domainsFile'],
        'force_renew': value['forceRenew'],
        'force_validation': value['forceValidation'],
        'full_chain': value['fullChain'],
        'group': value['group'],
        'hook_chain': value['hookChain'],
        'hook_script': value['hookScript'],
        'ipv4': value['ipv4'],
        'ipv6': value['ipv6'],
        'keep_going': value['keepGoing'],
        'key_algo': value['keyAlgo'],
        'key_size': value['keySize'],
        'lock_file': value['lockFile'],
        'no_lock': value['noLock'],
        'ocsp': value['ocsp'],
        'ocsp_days': value['ocspDays'],
        'ocsp_fetch': value['ocspFetch'],
        'ocsp_must_staple': value['ocspMustStaple'],
        'old_ca': value['oldCa'],
        'openssl': value['openssl'],
        'openssl_config': value['opensslConfig'],
        'preferred_chain': value['preferredChain'],
        'private_key_renew': value['privateKeyRenew'],
        'private_key_rollover': value['privateKeyRollover'],
        'renew_days': value['renewDays'],
        'user': value['user'],
        'well_known_dir': value['wellKnownDir'],
    };
}

