/* tslint:disable */
/* eslint-disable */
/**
 * Dehydrated API
 * This API provides a REST interface to manage domains for https://github.com/dehydrated-io/dehydrated
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime.ts";
/**
 *
 * @export
 * @interface ModelUpdateDomainRequest
 */
export interface ModelUpdateDomainRequest {
  /**
   * Alias is an optional alternative identifier.
   * @type {string}
   * @memberof ModelUpdateDomainRequest
   */
  alias?: string;
  /**
   * AlternativeNames is a list of additional domain names.
   * @type {Array<string>}
   * @memberof ModelUpdateDomainRequest
   */
  alternativeNames?: Array<string>;
  /**
   * Comment is an optional description.
   * @type {string}
   * @memberof ModelUpdateDomainRequest
   */
  comment?: string;
  /**
   * Enabled indicates whether the domain should be active.
   * @type {boolean}
   * @memberof ModelUpdateDomainRequest
   */
  enabled?: boolean;
}

/**
 * Check if a given object implements the ModelUpdateDomainRequest interface.
 */
export function instanceOfModelUpdateDomainRequest(
  value: object,
): value is ModelUpdateDomainRequest {
  return true;
}

export function ModelUpdateDomainRequestFromJSON(
  json: any,
): ModelUpdateDomainRequest {
  return ModelUpdateDomainRequestFromJSONTyped(json, false);
}

export function ModelUpdateDomainRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ModelUpdateDomainRequest {
  if (json == null) {
    return json;
  }
  return {
    alias: json["alias"] == null ? undefined : json["alias"],
    alternativeNames:
      json["alternative_names"] == null ? undefined : json["alternative_names"],
    comment: json["comment"] == null ? undefined : json["comment"],
    enabled: json["enabled"] == null ? undefined : json["enabled"],
  };
}

export function ModelUpdateDomainRequestToJSON(
  json: any,
): ModelUpdateDomainRequest {
  return ModelUpdateDomainRequestToJSONTyped(json, false);
}

export function ModelUpdateDomainRequestToJSONTyped(
  value?: ModelUpdateDomainRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    alias: value["alias"],
    alternative_names: value["alternativeNames"],
    comment: value["comment"],
    enabled: value["enabled"],
  };
}
