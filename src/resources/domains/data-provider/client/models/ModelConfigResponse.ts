/* tslint:disable */
/* eslint-disable */
/**
 * Dehydrated API
 * Authentication is optional and depends on server configuration. When enabled, all API endpoints require a valid JWT token in the Authorization header. When disabled, no authentication is required.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DehydratedConfig } from './DehydratedConfig';
import {
    DehydratedConfigFromJSON,
    DehydratedConfigFromJSONTyped,
    DehydratedConfigToJSON,
    DehydratedConfigToJSONTyped,
} from './DehydratedConfig';

/**
 * 
 * @export
 * @interface ModelConfigResponse
 */
export interface ModelConfigResponse {
    /**
     * 
     * @type {DehydratedConfig}
     * @memberof ModelConfigResponse
     */
    data?: DehydratedConfig;
    /**
     * 
     * @type {string}
     * @memberof ModelConfigResponse
     */
    error?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ModelConfigResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the ModelConfigResponse interface.
 */
export function instanceOfModelConfigResponse(value: object): value is ModelConfigResponse {
    return true;
}

export function ModelConfigResponseFromJSON(json: any): ModelConfigResponse {
    return ModelConfigResponseFromJSONTyped(json, false);
}

export function ModelConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelConfigResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : DehydratedConfigFromJSON(json['data']),
        'error': json['error'] == null ? undefined : json['error'],
        'success': json['success'] == null ? undefined : json['success'],
    };
}

export function ModelConfigResponseToJSON(json: any): ModelConfigResponse {
    return ModelConfigResponseToJSONTyped(json, false);
}

export function ModelConfigResponseToJSONTyped(value?: ModelConfigResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': DehydratedConfigToJSON(value['data']),
        'error': value['error'],
        'success': value['success'],
    };
}

