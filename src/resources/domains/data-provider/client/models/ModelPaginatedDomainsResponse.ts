/* tslint:disable */
/* eslint-disable */
/**
 * Dehydrated API
 * Authentication is optional and depends on server configuration. When enabled, all API endpoints require a valid JWT token in the Authorization header. When disabled, no authentication is required.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelPaginationInfo } from './ModelPaginationInfo';
import {
    ModelPaginationInfoFromJSON,
    ModelPaginationInfoFromJSONTyped,
    ModelPaginationInfoToJSON,
    ModelPaginationInfoToJSONTyped,
} from './ModelPaginationInfo';
import type { ModelDomainEntry } from './ModelDomainEntry';
import {
    ModelDomainEntryFromJSON,
    ModelDomainEntryFromJSONTyped,
    ModelDomainEntryToJSON,
    ModelDomainEntryToJSONTyped,
} from './ModelDomainEntry';

/**
 * Paginated response containing multiple domain entries
 * @export
 * @interface ModelPaginatedDomainsResponse
 */
export interface ModelPaginatedDomainsResponse {
    /**
     * Data contains the list of domain entries if the operation was successful
     * @Description List of domain entries if the operation was successful
     * @type {Array<ModelDomainEntry>}
     * @memberof ModelPaginatedDomainsResponse
     */
    data?: Array<ModelDomainEntry>;
    /**
     * Error contains an error message if the operation failed
     * @Description Error message if the operation failed
     * @type {string}
     * @memberof ModelPaginatedDomainsResponse
     */
    error?: string;
    /**
     * Pagination contains pagination metadata
     * @Description Pagination metadata
     * @type {ModelPaginationInfo}
     * @memberof ModelPaginatedDomainsResponse
     */
    pagination?: ModelPaginationInfo;
    /**
     * Success indicates whether the operation was successful
     * @Description Whether the operation was successful
     * @type {boolean}
     * @memberof ModelPaginatedDomainsResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the ModelPaginatedDomainsResponse interface.
 */
export function instanceOfModelPaginatedDomainsResponse(value: object): value is ModelPaginatedDomainsResponse {
    return true;
}

export function ModelPaginatedDomainsResponseFromJSON(json: any): ModelPaginatedDomainsResponse {
    return ModelPaginatedDomainsResponseFromJSONTyped(json, false);
}

export function ModelPaginatedDomainsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelPaginatedDomainsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(ModelDomainEntryFromJSON)),
        'error': json['error'] == null ? undefined : json['error'],
        'pagination': json['pagination'] == null ? undefined : ModelPaginationInfoFromJSON(json['pagination']),
        'success': json['success'] == null ? undefined : json['success'],
    };
}

export function ModelPaginatedDomainsResponseToJSON(json: any): ModelPaginatedDomainsResponse {
    return ModelPaginatedDomainsResponseToJSONTyped(json, false);
}

export function ModelPaginatedDomainsResponseToJSONTyped(value?: ModelPaginatedDomainsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(ModelDomainEntryToJSON)),
        'error': value['error'],
        'pagination': ModelPaginationInfoToJSON(value['pagination']),
        'success': value['success'],
    };
}

