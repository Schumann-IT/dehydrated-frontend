/* tslint:disable */
/* eslint-disable */
/**
 * Dehydrated API
 * Authentication is optional and depends on server configuration. When enabled, all API endpoints require a valid JWT token in the Authorization header. When disabled, no authentication is required.
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { ModelDomainsResponse } from "../models/index";
import {
  ModelDomainsResponseFromJSON,
  ModelDomainsResponseToJSON,
} from "../models/index";

/**
 *
 */
export class HealthApi extends runtime.BaseAPI {
  /**
   * Check if the API is running and healthy
   * Health check
   */
  async healthGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<ModelDomainsResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.apiKey) {
      headerParameters["Authorization"] =
        await this.configuration.apiKey("Authorization"); // BearerAuth authentication
    }

    const response = await this.request(
      {
        path: `/health`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      ModelDomainsResponseFromJSON(jsonValue),
    );
  }

  /**
   * Check if the API is running and healthy
   * Health check
   */
  async healthGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<ModelDomainsResponse> {
    const response = await this.healthGetRaw(initOverrides);
    return await response.value();
  }
}
